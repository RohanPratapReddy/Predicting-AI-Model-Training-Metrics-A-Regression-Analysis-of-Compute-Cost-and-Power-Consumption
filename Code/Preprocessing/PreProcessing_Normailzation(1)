{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"machine_shape":"hm","gpuType":"V28","authorship_tag":"ABX9TyOxwYEOxxQ9joiPhyfA5WFO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"TPU"},"cells":[{"cell_type":"markdown","source":["# **DATA 6250**\n","# **Machine Learning for Data Science**\n","## **Final Project**\n","## **Pre-Processing of Data**\n","## **Normalization of Data**\n","### ***REFERENCE: EPOCH AI***\n","### ***Links to Dataset:***\n","- *Notable AI Models* : https://epoch.ai/data/notable_ai_models.csv\n","- *Large-Scale AI Models* : https://epoch.ai/data/large_scale_ai_models.csv\n","- *ML Hardware* : https://epoch.ai/data/ml_hardware.csv\n","\n","#### Done By: Rohan Pratap Reddy Ravula\n","#### School of Computing and Data Science\n","#### Wentworth Institute of Technology"],"metadata":{"id":"bw-F8b-r2LYN"}},{"cell_type":"markdown","source":["### Install required Libraries"],"metadata":{"id":"N6agGxTVyDaU"}},{"cell_type":"code","source":["!pip install google.colab\n","!pip install gdown"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"khH24W3B2LpA","executionInfo":{"status":"ok","timestamp":1744221942184,"user_tz":240,"elapsed":5524,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"c1ecbc16-a409-4c47-9020-3e13b65a5bfe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: google.colab in /usr/local/lib/python3.11/dist-packages (1.0.0)\n","Requirement already satisfied: google-auth==2.38.0 in /usr/local/lib/python3.11/dist-packages (from google.colab) (2.38.0)\n","Requirement already satisfied: ipykernel==6.17.1 in /usr/local/lib/python3.11/dist-packages (from google.colab) (6.17.1)\n","Requirement already satisfied: ipyparallel==8.8.0 in /usr/local/lib/python3.11/dist-packages (from google.colab) (8.8.0)\n","Requirement already satisfied: ipython==7.34.0 in /usr/local/lib/python3.11/dist-packages (from google.colab) (7.34.0)\n","Requirement already satisfied: notebook==6.5.7 in /usr/local/lib/python3.11/dist-packages (from google.colab) (6.5.7)\n","Requirement already satisfied: pandas==2.2.2 in /usr/local/lib/python3.11/dist-packages (from google.colab) (2.2.2)\n","Requirement already satisfied: portpicker==1.5.2 in /usr/local/lib/python3.11/dist-packages (from google.colab) (1.5.2)\n","Requirement already satisfied: requests==2.32.3 in /usr/local/lib/python3.11/dist-packages (from google.colab) (2.32.3)\n","Requirement already satisfied: tornado==6.4.2 in /usr/local/lib/python3.11/dist-packages (from google.colab) (6.4.2)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from google-auth==2.38.0->google.colab) (5.5.2)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.11/dist-packages (from google-auth==2.38.0->google.colab) (0.4.2)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.11/dist-packages (from google-auth==2.38.0->google.colab) (4.9)\n","Requirement already satisfied: debugpy>=1.0 in /usr/local/lib/python3.11/dist-packages (from ipykernel==6.17.1->google.colab) (1.8.0)\n","Requirement already satisfied: jupyter-client>=6.1.12 in /usr/local/lib/python3.11/dist-packages (from ipykernel==6.17.1->google.colab) (6.1.12)\n","Requirement already satisfied: matplotlib-inline>=0.1 in /usr/local/lib/python3.11/dist-packages (from ipykernel==6.17.1->google.colab) (0.1.7)\n","Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.11/dist-packages (from ipykernel==6.17.1->google.colab) (1.6.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from ipykernel==6.17.1->google.colab) (24.2)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.11/dist-packages (from ipykernel==6.17.1->google.colab) (5.9.5)\n","Requirement already satisfied: pyzmq>=17 in /usr/local/lib/python3.11/dist-packages (from ipykernel==6.17.1->google.colab) (24.0.1)\n","Requirement already satisfied: traitlets>=5.1.0 in /usr/local/lib/python3.11/dist-packages (from ipykernel==6.17.1->google.colab) (5.7.1)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.11/dist-packages (from ipyparallel==8.8.0->google.colab) (5.2.1)\n","Requirement already satisfied: entrypoints in /usr/local/lib/python3.11/dist-packages (from ipyparallel==8.8.0->google.colab) (0.4)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.11/dist-packages (from ipyparallel==8.8.0->google.colab) (2.9.0.post0)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from ipyparallel==8.8.0->google.colab) (4.67.1)\n","Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.11/dist-packages (from ipython==7.34.0->google.colab) (75.2.0)\n","Collecting jedi>=0.16 (from ipython==7.34.0->google.colab)\n","  Downloading jedi-0.19.2-py2.py3-none-any.whl.metadata (22 kB)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.11/dist-packages (from ipython==7.34.0->google.colab) (0.7.5)\n","Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from ipython==7.34.0->google.colab) (3.0.50)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.11/dist-packages (from ipython==7.34.0->google.colab) (2.19.1)\n","Requirement already satisfied: backcall in /usr/local/lib/python3.11/dist-packages (from ipython==7.34.0->google.colab) (0.2.0)\n","Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.11/dist-packages (from ipython==7.34.0->google.colab) (4.9.0)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from notebook==6.5.7->google.colab) (3.1.6)\n","Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.11/dist-packages (from notebook==6.5.7->google.colab) (23.1.0)\n","Requirement already satisfied: jupyter-core>=4.6.1 in /usr/local/lib/python3.11/dist-packages (from notebook==6.5.7->google.colab) (5.7.2)\n","Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.11/dist-packages (from notebook==6.5.7->google.colab) (0.2.0)\n","Requirement already satisfied: nbformat in /usr/local/lib/python3.11/dist-packages (from notebook==6.5.7->google.colab) (5.10.4)\n","Requirement already satisfied: nbconvert>=5 in /usr/local/lib/python3.11/dist-packages (from notebook==6.5.7->google.colab) (7.16.6)\n","Requirement already satisfied: Send2Trash>=1.8.0 in /usr/local/lib/python3.11/dist-packages (from notebook==6.5.7->google.colab) (1.8.3)\n","Requirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.11/dist-packages (from notebook==6.5.7->google.colab) (0.18.1)\n","Requirement already satisfied: prometheus-client in /usr/local/lib/python3.11/dist-packages (from notebook==6.5.7->google.colab) (0.21.1)\n","Requirement already satisfied: nbclassic>=0.4.7 in /usr/local/lib/python3.11/dist-packages (from notebook==6.5.7->google.colab) (1.2.0)\n","Requirement already satisfied: numpy>=1.23.2 in /usr/local/lib/python3.11/dist-packages (from pandas==2.2.2->google.colab) (2.0.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas==2.2.2->google.colab) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas==2.2.2->google.colab) (2025.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests==2.32.3->google.colab) (3.4.1)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests==2.32.3->google.colab) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests==2.32.3->google.colab) (2.3.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests==2.32.3->google.colab) (2025.1.31)\n","Requirement already satisfied: parso<0.9.0,>=0.8.4 in /usr/local/lib/python3.11/dist-packages (from jedi>=0.16->ipython==7.34.0->google.colab) (0.8.4)\n","Requirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.11/dist-packages (from jupyter-core>=4.6.1->notebook==6.5.7->google.colab) (4.3.7)\n","Requirement already satisfied: notebook-shim>=0.2.3 in /usr/local/lib/python3.11/dist-packages (from nbclassic>=0.4.7->notebook==6.5.7->google.colab) (0.2.4)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook==6.5.7->google.colab) (4.13.3)\n","Requirement already satisfied: bleach!=5.0.0 in /usr/local/lib/python3.11/dist-packages (from bleach[css]!=5.0.0->nbconvert>=5->notebook==6.5.7->google.colab) (6.2.0)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook==6.5.7->google.colab) (0.7.1)\n","Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook==6.5.7->google.colab) (0.3.0)\n","Requirement already satisfied: markupsafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook==6.5.7->google.colab) (3.0.2)\n","Requirement already satisfied: mistune<4,>=2.0.3 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook==6.5.7->google.colab) (3.1.3)\n","Requirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook==6.5.7->google.colab) (0.10.2)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.11/dist-packages (from nbconvert>=5->notebook==6.5.7->google.colab) (1.5.1)\n","Requirement already satisfied: fastjsonschema>=2.15 in /usr/local/lib/python3.11/dist-packages (from nbformat->notebook==6.5.7->google.colab) (2.21.1)\n","Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.11/dist-packages (from nbformat->notebook==6.5.7->google.colab) (4.23.0)\n","Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.11/dist-packages (from pexpect>4.3->ipython==7.34.0->google.colab) (0.7.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.11/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython==7.34.0->google.colab) (0.2.13)\n","Requirement already satisfied: pyasn1<0.7.0,>=0.6.1 in /usr/local/lib/python3.11/dist-packages (from pyasn1-modules>=0.2.1->google-auth==2.38.0->google.colab) (0.6.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.1->ipyparallel==8.8.0->google.colab) (1.17.0)\n","Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.11/dist-packages (from argon2-cffi->notebook==6.5.7->google.colab) (21.2.0)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.11/dist-packages (from bleach!=5.0.0->bleach[css]!=5.0.0->nbconvert>=5->notebook==6.5.7->google.colab) (0.5.1)\n","Requirement already satisfied: tinycss2<1.5,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from bleach[css]!=5.0.0->nbconvert>=5->notebook==6.5.7->google.colab) (1.4.0)\n","Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook==6.5.7->google.colab) (25.3.0)\n","Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook==6.5.7->google.colab) (2024.10.1)\n","Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook==6.5.7->google.colab) (0.36.2)\n","Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=2.6->nbformat->notebook==6.5.7->google.colab) (0.24.0)\n","Requirement already satisfied: jupyter-server<3,>=1.8 in /usr/local/lib/python3.11/dist-packages (from notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook==6.5.7->google.colab) (1.16.0)\n","Requirement already satisfied: cffi>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from argon2-cffi-bindings->argon2-cffi->notebook==6.5.7->google.colab) (1.17.1)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4->nbconvert>=5->notebook==6.5.7->google.colab) (2.6)\n","Requirement already satisfied: typing-extensions>=4.0.0 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4->nbconvert>=5->notebook==6.5.7->google.colab) (4.13.1)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.11/dist-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->notebook==6.5.7->google.colab) (2.22)\n","Requirement already satisfied: anyio>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook==6.5.7->google.colab) (4.9.0)\n","Requirement already satisfied: websocket-client in /usr/local/lib/python3.11/dist-packages (from jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook==6.5.7->google.colab) (1.8.0)\n","Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.11/dist-packages (from anyio>=3.1.0->jupyter-server<3,>=1.8->notebook-shim>=0.2.3->nbclassic>=0.4.7->notebook==6.5.7->google.colab) (1.3.1)\n","Downloading jedi-0.19.2-py2.py3-none-any.whl (1.6 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m19.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: jedi\n","Successfully installed jedi-0.19.2\n","Requirement already satisfied: gdown in /usr/local/lib/python3.11/dist-packages (5.2.0)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.11/dist-packages (from gdown) (4.13.3)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from gdown) (3.18.0)\n","Requirement already satisfied: requests[socks] in /usr/local/lib/python3.11/dist-packages (from gdown) (2.32.3)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from gdown) (4.67.1)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4->gdown) (2.6)\n","Requirement already satisfied: typing-extensions>=4.0.0 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4->gdown) (4.13.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests[socks]->gdown) (3.4.1)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests[socks]->gdown) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests[socks]->gdown) (2.3.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests[socks]->gdown) (2025.1.31)\n","Requirement already satisfied: PySocks!=1.5.7,>=1.5.6 in /usr/local/lib/python3.11/dist-packages (from requests[socks]->gdown) (1.7.1)\n"]}]},{"cell_type":"markdown","source":["### Mount Google Drive Folder"],"metadata":{"id":"EL9djWrayMji"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ePw-mz5T2q0v","executionInfo":{"status":"ok","timestamp":1744221963687,"user_tz":240,"elapsed":18051,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"c7d2a33c-c315-4b75-82da-187fae1c118e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["### Import required Libraries"],"metadata":{"id":"0d9SkrB3yUPc"}},{"cell_type":"code","source":["import pandas as pd\n","import os"],"metadata":{"id":"9KkPLLMD3fks"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Import the csv file : large scale AI models"],"metadata":{"id":"N0XoWDXgyXqy"}},{"cell_type":"code","source":["input_path_large_models = \"/content/drive/MyDrive/DATA 6250/Datasets/Original/large_scale_ai_models.csv\"\n","df = pd.read_csv(input_path_large_models)\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SamretLK25pf","executionInfo":{"status":"ok","timestamp":1744225337118,"user_tz":240,"elapsed":25,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"fd890be1-5a40-4ab7-92e6-fc19a234e3ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(290, 31)"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["for col in df.columns:\n","    print(col, df[col].dtype)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hvAD6kUJ9FU8","executionInfo":{"status":"ok","timestamp":1744225382882,"user_tz":240,"elapsed":3,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"440c661d-6a76-422e-acc8-69803939a9ec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model object\n","Domain object\n","Organization object\n","Organization categorization object\n","Country (from Organization) object\n","Authors object\n","Publication date object\n","Reference object\n","Link object\n","Citations float64\n","Notability criteria object\n","Notability criteria notes object\n","Parameters float64\n","Parameters notes object\n","Training compute (FLOP) float64\n","Training compute notes object\n","Training dataset object\n","Training dataset notes object\n","Training dataset size (datapoints) float64\n","Dataset size notes object\n","Epochs float64\n","Training time (hours) float64\n","Training time notes object\n","Training hardware object\n","Hardware quantity float64\n","Hardware utilization float64\n","Training compute cost (2023 USD) float64\n","Compute cost notes object\n","Confidence object\n","Abstract object\n","Base model object\n","Finetune compute (FLOP) float64\n","Finetune compute notes object\n","Batch size float64\n","Batch size notes object\n","Model accessibility object\n","Training code accessibility object\n","Inference code accessibility object\n","Accessibility notes object\n","Frontier model object\n","Training power draw (W) float64\n","Training compute estimation method object\n"]}]},{"cell_type":"markdown","source":["### Rename the columns"],"metadata":{"id":"AH2OLepDynwE"}},{"cell_type":"code","source":["rename_cols = {\"Model accessibility\":\"accessibility\",\"Publication date\":\"Date\",\n","               \"Training dataset size (datapoints)\":\"data size\",\n","               \"Country (from Organization)\":\"Country\",\n","               \"Organization categorization (from Organization)\":\"Category\"}\n","df.rename(columns=rename_cols,inplace=True)\n","for col in df.columns:\n","    print(col)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FPxbhpyNzbEK","executionInfo":{"status":"ok","timestamp":1744224809778,"user_tz":240,"elapsed":5,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"3b692b36-5eaf-49e5-934f-c89de85d12d9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model\n","Domain\n","Task\n","Authors\n","accessibility\n","Link\n","Citations\n","Reference\n","Date\n","Organization\n","Parameters\n","Parameters notes\n","Training compute (FLOP)\n","Training compute notes\n","Training dataset\n","Training dataset notes\n","data size\n","Dataset size notes\n","Training time (hours)\n","Training time notes\n","Training hardware\n","Confidence\n","Abstract\n","Country\n","Base model\n","Finetune compute (FLOP)\n","Finetune compute notes\n","Hardware quantity\n","Training code accessibility\n","Accessibility notes\n","Category\n"]}]},{"cell_type":"markdown","source":["### Place the columns in a proper order"],"metadata":{"id":"tdVWrDXCyruY"}},{"cell_type":"code","source":["order = [\"Model\",\"Domain\",\"Country\",\"Organization\",\"Date\",\"Category\",\"Task\",\n","         \"Parameters\",\"data size\", \"Training time (hours)\",\"Confidence\",\"Hardware quantity\",\"Training hardware\"]\n","left_over = [col for col in df.columns if col not in order]\n","df = df.reindex(columns=order+left_over)\n","for col in df.columns:\n","    print(col)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Jso0j3eV2RkF","executionInfo":{"status":"ok","timestamp":1744224818635,"user_tz":240,"elapsed":4,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"3c6ff00e-a653-47cd-de86-f5c74d24cdbd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model\n","Domain\n","Country\n","Organization\n","Date\n","Category\n","Task\n","Parameters\n","data size\n","Training time (hours)\n","Confidence\n","Hardware quantity\n","Training hardware\n","Authors\n","accessibility\n","Link\n","Citations\n","Reference\n","Parameters notes\n","Training compute (FLOP)\n","Training compute notes\n","Training dataset\n","Training dataset notes\n","Dataset size notes\n","Training time notes\n","Abstract\n","Base model\n","Finetune compute (FLOP)\n","Finetune compute notes\n","Training code accessibility\n","Accessibility notes\n"]}]},{"cell_type":"markdown","source":["### Drop/Delete redundant columns"],"metadata":{"id":"Dc8GFCTBywWL"}},{"cell_type":"code","source":["df = df.drop(columns=[\"Link\",\"Citations\",\"Reference\",\"Base model\",\"Accessibility notes\"],axis=1)\n","for col in df.columns:\n","    print(col, df[col].dtype)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"McKm6VFp9TjC","executionInfo":{"status":"ok","timestamp":1744224822629,"user_tz":240,"elapsed":4,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"31011b5a-9b16-4e6e-998d-c61f58301fd9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model object\n","Domain object\n","Country object\n","Organization object\n","Date object\n","Category object\n","Task object\n","Parameters float64\n","data size float64\n","Training time (hours) float64\n","Confidence object\n","Hardware quantity float64\n","Training hardware object\n","Authors object\n","accessibility object\n","Parameters notes object\n","Training compute (FLOP) float64\n","Training compute notes object\n","Training dataset object\n","Training dataset notes object\n","Dataset size notes object\n","Training time notes object\n","Abstract object\n","Finetune compute (FLOP) float64\n","Finetune compute notes object\n","Training code accessibility object\n"]}]},{"cell_type":"markdown","source":["### Find all columns that needs to be normalized"],"metadata":{"id":"g7sYlOCly3qe"}},{"cell_type":"code","source":["columns_to_explode = [\n","    col for col in df.select_dtypes(include=['object']).columns\n","    if df[col].dropna().astype(str).str.contains(',').any()\n","]\n","for col in columns_to_explode:\n","    print(col)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d-SauU9d4BBC","executionInfo":{"status":"ok","timestamp":1744226254206,"user_tz":240,"elapsed":44,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"ef1cec83-fa43-4a8b-f120-b1306bbdd69e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model\n","Domain\n","Organization\n","Country\n","Notability\n","Training hardware\n","Category\n","Authors\n","Notability criteria notes\n","Parameters notes\n","Training compute notes\n","Training dataset\n","Training dataset notes\n","Dataset size notes\n","Training time notes\n","Compute cost notes\n","Abstract\n","Base model\n","Finetune compute notes\n","Batch size notes\n","Accessibility notes\n","Training compute estimation method\n"]}]},{"cell_type":"markdown","source":["### Select only those columns that needs to be normailzed"],"metadata":{"id":"kd0Zy5zAy94P"}},{"cell_type":"code","source":["col_to_remove = [\"Parameters notes\",\"Training dataset\",\"Training compute notes\",\n","                 \"Dataset size notes\",\"Training time notes\",\"Training hardware\",\n","                 \"Abstract\",\"Finetune compute notes\",\"Accessibility notes\",\"Authors\",\n","                 \"Training dataset notes\"]\n","col_to_remove = [col for col in col_to_remove if col in columns_to_explode]\n","for col in col_to_remove:\n","    columns_to_explode.remove(col)\n","for col in columns_to_explode:\n","    print(col)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VrIRPR2k9-pk","executionInfo":{"status":"ok","timestamp":1744224826472,"user_tz":240,"elapsed":3,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"e13a2543-118a-4c8b-a981-58fa791917eb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Domain\n","Country\n","Organization\n","Category\n","Task\n"]}]},{"cell_type":"markdown","source":["### Normalize the selected columns"],"metadata":{"id":"JhPqCq2uzDUM"}},{"cell_type":"code","source":["for col in columns_to_explode:\n","    df[col] = df[col].apply(lambda x: [s.strip() for s in str(x).split(',')] if pd.notnull(x) else x)"],"metadata":{"id":"xSpIOLVi4icI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for col in columns_to_explode:\n","    df = df.explode(col)"],"metadata":{"id":"_uhvJXJF401n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for val in df['Organization'].unique():\n","  print(\"Organization: \",val)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qJnoKYys4V4H","executionInfo":{"status":"ok","timestamp":1744224844052,"user_tz":240,"elapsed":5,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"caaaa3ec-516a-4070-81e8-a3701fbe5795"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Organization:  Meta AI\n","Organization:  OpenAI\n","Organization:  Anthropic\n","Organization:  Arc Institute\n","Organization:  Stanford University\n","Organization:  NVIDIA\n","Organization:  Liquid\n","Organization:  University of California (UC) Berkeley\n","Organization:  Goodfire\n","Organization:  Columbia University\n","Organization:  University of California San Francisco\n","Organization:  xAI\n","Organization:  Mistral AI\n","Organization:  Alibaba\n","Organization:  ByteDance\n","Organization:  Allen Institute for AI\n","Organization:  University of Washington\n","Organization:  New York University (NYU)\n","Organization:  DeepSeek\n","Organization:  Microsoft Research\n","Organization:  Google DeepMind\n","Organization:  Google\n","Organization:  LG AI Research\n","Organization:  Amazon\n","Organization:  Tencent\n","Organization:  MiniMax\n","Organization:  Ant Group\n","Organization:  IBM\n","Organization:  01.AI\n","Organization:  Adobe\n","Organization:  Zhipu AI\n","Organization:  Tsinghua University\n","Organization:  iFlytek\n","Organization:  China Telecom\n","Organization:  Moonshot\n","Organization:  Aleph Alpha\n","Organization:  Midjourney\n","Organization:  Apple\n","Organization:  EvolutionaryScale\n","Organization:  Preferred Networks Inc\n","Organization:  IBM Research\n","Organization:  Facebook AI Research\n","Organization:  Technology Innovation Institute\n","Organization:  Snowflake\n","Organization:  Microsoft\n","Organization:  SenseTime\n","Organization:  Reka AI\n","Organization:  Stability AI\n","Organization:  Cohere\n","Organization:  Cohere for AI\n","Organization:  Silo AI\n","Organization:  University of Turku\n","Organization:  Yandex\n","Organization:  Databricks\n","Organization:  Inflection AI\n","Organization:  Saudi Aramco\n","Organization:  StepFun\n","Organization:  Hugging Face\n","Organization:  ServiceNow\n","Organization:  BigCode\n","Organization:  Peking University\n","Organization:  Kuaishou Technology\n","Organization:  Adept\n","Organization:  Shanghai AI Lab\n","Organization:  Chinese University of Hong Kong (CUHK)\n","Organization:  Fudan University\n","Organization:  Yayi (Wenge)\n","Organization:  LightOn\n","Organization:  Konan Technology\n","Organization:  High-Performance Language Technologies (HPLT)\n","Organization:  XVERSE Technology\n","Organization:  Shenzhen Yuanxiang Technology\n","Organization:  NTT Communication Science Laboratories\n","Organization:  Inspur\n","Organization:  Samsung\n","Organization:  vivo AI lab\n","Organization:  Nanbeige LLM Lab\n","Organization:  DeepLang AI\n","Organization:  KT\n","Organization:  Kunlun Inc.\n","Organization:  Dahua Technology\n","Organization:  Baidu\n","Organization:  Beijing Academy of Artificial Intelligence / BAAI\n","Organization:  China Mobile\n","Organization:  National University of Singapore\n","Organization:  Baichuan\n","Organization:  360 Security Technology\n","Organization:  Mianbi Intelligence\n","Organization:  TAL Education Group (Xueersi)\n","Organization:  NAVER\n","Organization:  NCSOFT\n","Organization:  Technion - Israel Institute of Technology\n","Organization:  NetEase\n","Organization:  JD.com\n","Organization:  Huawei\n","Organization:  BioMap Research\n","Organization:  NEC Laboratories\n","Organization:  MosaicML\n","Organization:  AI inside\n","Organization:  Salesforce\n","Organization:  Sber\n","Organization:  Bloomberg\n","Organization:  Johns Hopkins University\n","Organization:  Runway\n","Organization:  Huawei Noah's Ark Lab\n","Organization:  AI21 Labs\n","Organization:  Hong Kong Baptist University\n","Organization:  BigScience\n","Organization:  Google Research\n","Organization:  Ruhr University Bochum\n","Organization:  Technische Universität Dresden\n","Organization:  University of London\n","Organization:  Google Brain\n","Organization:  DeepMind\n","Organization:  Peng Cheng Laboratory\n","Organization:  LG\n","Organization:  Search Solutions\n"]}]},{"cell_type":"markdown","source":["### Rename the country names properly"],"metadata":{"id":"ZcKjTdBTzKWt"}},{"cell_type":"code","source":["for val in df['Country'].unique():\n","  print(\"Country: \",val)\n","print(\"\\n\\n\")\n","df['Country'] = df['Country'].replace({'United States of America':'USA',\n","                                           'United Kingdom of Great Britain and Northern Ireland':'UK',\n","                                           'Korea (Republic of)':'South Korea',\n","                                           'United Arab Emirates': 'UAE'})\n","for val in df['Country'].unique():\n","  print(\"Country: \",val)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aKezAZ-4zWba","executionInfo":{"status":"ok","timestamp":1744224445413,"user_tz":240,"elapsed":7,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"a8c980ce-0e43-487e-b820-284f552de7ad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Country:  United States of America\n","Country:  France\n","Country:  China\n","Country:  United Kingdom of Great Britain and Northern Ireland\n","Country:  Multinational\n","Country:  Korea (Republic of)\n","Country:  Germany\n","Country:  Japan\n","Country:  United Arab Emirates\n","Country:  Hong Kong\n","Country:  Canada\n","Country:  Finland\n","Country:  Russia\n","Country:  Saudi Arabia\n","Country:  Singapore\n","Country:  Israel\n","\n","\n","\n","Country:  USA\n","Country:  France\n","Country:  China\n","Country:  UK\n","Country:  Multinational\n","Country:  South Korea\n","Country:  Germany\n","Country:  Japan\n","Country:  UAE\n","Country:  Hong Kong\n","Country:  Canada\n","Country:  Finland\n","Country:  Russia\n","Country:  Saudi Arabia\n","Country:  Singapore\n","Country:  Israel\n"]}]},{"cell_type":"markdown","source":["### Drop the duplicate rows"],"metadata":{"id":"3xIjxcD2zPhd"}},{"cell_type":"code","source":["df = df.drop_duplicates(subset=[\"Model\",\"Domain\",\"Country\",\"Organization\",\"Category\",\"Task\"])\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6CvIN4Xm48VQ","executionInfo":{"status":"ok","timestamp":1744225047072,"user_tz":240,"elapsed":47,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"08a37f09-b1fa-4d50-a972-879b7bba4fda"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2078, 26)"]},"metadata":{},"execution_count":77}]},{"cell_type":"markdown","source":["### Save the file in the new directory"],"metadata":{"id":"k5w68A_fzTje"}},{"cell_type":"code","source":["output_path_large_models = \"/content/drive/MyDrive/DATA 6250/Datasets/Updated/Normalized/large_scale_ai_models_normalized.csv\"\n","if os.path.exists(output_path_large_models):\n","    os.remove(output_path_large_models)\n","path = os.path.dirname(output_path_large_models)\n","if not os.path.exists(path):\n","    os.makedirs(path)\n","df.to_csv(output_path_large_models, index=False)"],"metadata":{"id":"Un8HY92oAxB1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Import the csv file : notable AI models"],"metadata":{"id":"MfNZTdLt7lAY"}},{"cell_type":"code","source":["input_path_notable_ai_models = \"/content/drive/MyDrive/DATA 6250/Datasets/Original/notable_ai_models.csv\"\n","df = pd.read_csv(input_path_notable_ai_models)\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xzGDJ38y7lO8","executionInfo":{"status":"ok","timestamp":1744229324489,"user_tz":240,"elapsed":43,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"34f67353-98c6-4bf8-80c3-bfa39c8a9105"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(914, 42)"]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["for col in df.columns:\n","    print(col)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-BMYEPAU70kn","executionInfo":{"status":"ok","timestamp":1744229325853,"user_tz":240,"elapsed":4,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"6210e520-0b3b-42e4-a59b-be5dcd4a2021"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model\n","Domain\n","Organization\n","Organization categorization\n","Country (from Organization)\n","Authors\n","Publication date\n","Reference\n","Link\n","Citations\n","Notability criteria\n","Notability criteria notes\n","Parameters\n","Parameters notes\n","Training compute (FLOP)\n","Training compute notes\n","Training dataset\n","Training dataset notes\n","Training dataset size (datapoints)\n","Dataset size notes\n","Epochs\n","Training time (hours)\n","Training time notes\n","Training hardware\n","Hardware quantity\n","Hardware utilization\n","Training compute cost (2023 USD)\n","Compute cost notes\n","Confidence\n","Abstract\n","Base model\n","Finetune compute (FLOP)\n","Finetune compute notes\n","Batch size\n","Batch size notes\n","Model accessibility\n","Training code accessibility\n","Inference code accessibility\n","Accessibility notes\n","Frontier model\n","Training power draw (W)\n","Training compute estimation method\n"]}]},{"cell_type":"markdown","source":["### Rename and place columns in proper order and delete the redundant columns."],"metadata":{"id":"yyoHj6MKzpps"}},{"cell_type":"code","source":["rename_cols = {\"Organization categorization\":\"Category\",\"Country (from Organization)\":\"Country\",\n","               \"Publication date\":\"Date\",\"Notability criteria\":\"Notability\",\"Training dataset size (datapoints)\":\"data size\",\n","               \"Training power draw (W)\":\"Power draw (W)\"}\n","df.rename(columns=rename_cols,inplace=True)\n","order = [\"Model\",\"Domain\",\"Organization\",\"Country\",\"Date\",\"Notability\",\"Training compute (FLOP)\", \"Finetune compute (FLOP)\",\n","         \"data size\",\"Epochs\",\"Batch size\",\"Training time (hours)\",\"Power draw (W)\",\"Training compute cost\",\"Confidence\",\"Training hardware\",\"Hardware quantity\",\n","         \"Hardware utilization\"]\n","right_over = [col for col in df.columns if col not in order]\n","df = df.reindex(columns=order+right_over)\n","removel_cols = [\"Link\",\"Citations\",\"Reference\"]\n","for col in removel_cols:\n","    df.drop(columns=col,inplace=True)\n","for col in df.columns:\n","    print(col)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H9KRbyj78WSX","executionInfo":{"status":"ok","timestamp":1744229328422,"user_tz":240,"elapsed":4,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"61782797-c1bb-4e53-c98b-3a63757fcd89"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model\n","Domain\n","Organization\n","Country\n","Date\n","Notability\n","Training compute (FLOP)\n","Finetune compute (FLOP)\n","data size\n","Epochs\n","Batch size\n","Training time (hours)\n","Power draw (W)\n","Training compute cost\n","Confidence\n","Training hardware\n","Hardware quantity\n","Hardware utilization\n","Category\n","Authors\n","Notability criteria notes\n","Parameters\n","Parameters notes\n","Training compute notes\n","Training dataset\n","Training dataset notes\n","Dataset size notes\n","Training time notes\n","Training compute cost (2023 USD)\n","Compute cost notes\n","Abstract\n","Base model\n","Finetune compute notes\n","Batch size notes\n","Model accessibility\n","Training code accessibility\n","Inference code accessibility\n","Accessibility notes\n","Frontier model\n","Training compute estimation method\n"]}]},{"cell_type":"markdown","source":["### Find all columns that needs to be normalized"],"metadata":{"id":"2kjMhUADz07b"}},{"cell_type":"code","source":["columns_to_explode = [\n","    col for col in df.select_dtypes(include=['object']).columns\n","    if df[col].dropna().astype(str).str.contains(',').any()\n","]\n","for col in columns_to_explode:\n","    print(col)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AoNnPDbY-jCS","executionInfo":{"status":"ok","timestamp":1744229331450,"user_tz":240,"elapsed":20,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"0eff00f4-9ce8-40d3-a953-3bbfb93fd3d8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model\n","Domain\n","Organization\n","Country\n","Notability\n","Training hardware\n","Category\n","Authors\n","Notability criteria notes\n","Parameters notes\n","Training compute notes\n","Training dataset\n","Training dataset notes\n","Dataset size notes\n","Training time notes\n","Compute cost notes\n","Abstract\n","Base model\n","Finetune compute notes\n","Batch size notes\n","Accessibility notes\n","Training compute estimation method\n"]}]},{"cell_type":"markdown","source":["### Select only those columns that needs to be normailzed"],"metadata":{"id":"0i1S-A0ez3yA"}},{"cell_type":"code","source":["columns_to_explode = [\"Model\",\"Domain\",\"Organization\",\"Country\",\"Notability\",\"Category\",\n","                      \"Base model\"]\n","for col in columns_to_explode:\n","    df[col] = df[col].apply(lambda x: [s.strip() for s in str(x).split(',')] if pd.notnull(x) else x)"],"metadata":{"id":"3wpxD6lZ_Xof"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Normalize the selected columns"],"metadata":{"id":"3QMSRY-1z9eY"}},{"cell_type":"code","source":["for col in columns_to_explode:\n","    df = df.explode(col)"],"metadata":{"id":"G817l1zFEMuj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MtqG61F2EP68","executionInfo":{"status":"ok","timestamp":1744229357286,"user_tz":240,"elapsed":5,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"14fd7844-b8cb-44c1-abc2-b7464f3ebc48"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(59367, 40)"]},"metadata":{},"execution_count":109}]},{"cell_type":"markdown","source":["### Normalize the selected columns"],"metadata":{"id":"LRD-myt60AgQ"}},{"cell_type":"code","source":["for val in df['Country'].unique():\n","  print(\"Country: \",val)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gyp75KMQEcf4","executionInfo":{"status":"ok","timestamp":1744229358861,"user_tz":240,"elapsed":6,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"75d0db8c-5b70-4039-e192-a7bb19947c5f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Country:  Korea (Republic of)\n","Country:  China\n","Country:  United States of America\n","Country:  United Kingdom of Great Britain and Northern Ireland\n","Country:  Multinational\n","Country:  France\n","Country:  Israel\n","Country:  Saudi Arabia\n","Country:  Canada\n","Country:  Hong Kong\n","Country:  Finland\n","Country:  Switzerland\n","Country:  Japan\n","Country:  Singapore\n","Country:  United Arab Emirates\n","Country:  Germany\n","Country:  Australia\n","Country:  Sweden\n","Country:  India\n","Country:  Spain\n","Country:  Netherlands\n","Country:  Taiwan\n","Country:  Austria\n","Country:  Norway\n","Country:  Russia\n","Country:  Belgium\n","Country:  Ireland\n","Country:  Poland\n","Country:  Czechia\n","Country:  Iran (Islamic Republic of)\n","Country:  nan\n","Country:  Argentina\n","Country:  Italy\n"]}]},{"cell_type":"code","source":["rename_vals = {'United States of America':'USA',\n","               'United Kingdom of Great Britain and Northern Ireland':'UK',\n","               'Korea (Republic of)':'South Korea',\n","               'United Arab Emirates': 'UAE',\n","               'Iran (Islamic Republic of)':'Iran'}\n","df['Country'] = df['Country'].replace(rename_vals)\n","for val in df['Country'].unique():\n","  print(\"Country: \",val)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fb3BcQlREipm","executionInfo":{"status":"ok","timestamp":1744229363454,"user_tz":240,"elapsed":46,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"92800a3d-0d6c-4c86-f73a-55cde82786d0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Country:  South Korea\n","Country:  China\n","Country:  USA\n","Country:  UK\n","Country:  Multinational\n","Country:  France\n","Country:  Israel\n","Country:  Saudi Arabia\n","Country:  Canada\n","Country:  Hong Kong\n","Country:  Finland\n","Country:  Switzerland\n","Country:  Japan\n","Country:  Singapore\n","Country:  UAE\n","Country:  Germany\n","Country:  Australia\n","Country:  Sweden\n","Country:  India\n","Country:  Spain\n","Country:  Netherlands\n","Country:  Taiwan\n","Country:  Austria\n","Country:  Norway\n","Country:  Russia\n","Country:  Belgium\n","Country:  Ireland\n","Country:  Poland\n","Country:  Czechia\n","Country:  Iran\n","Country:  nan\n","Country:  Argentina\n","Country:  Italy\n"]}]},{"cell_type":"markdown","source":["### Normalize the selected columns"],"metadata":{"id":"VMB4_gRO0HxC"}},{"cell_type":"code","source":["df = df.drop_duplicates()\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v0rwfspKFJpk","executionInfo":{"status":"ok","timestamp":1744229373631,"user_tz":240,"elapsed":115,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"ed40524c-9f31-4ae5-db5e-04a95ce10883"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5701, 40)"]},"metadata":{},"execution_count":112}]},{"cell_type":"markdown","source":["### Save the file in the new directory"],"metadata":{"id":"va5gDj8Y0LbH"}},{"cell_type":"code","source":["output_path_large_models = \"/content/drive/MyDrive/DATA 6250/Datasets/Updated/Normalized/notable_ai_models_normalized.csv\"\n","if os.path.exists(output_path_large_models):\n","    os.remove(output_path_large_models)\n","path = os.path.dirname(output_path_large_models)\n","if not os.path.exists(path):\n","    os.makedirs(path)\n","df.to_csv(output_path_large_models, index=False)"],"metadata":{"id":"KpY72m2tFwci"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Import the csv file : ML hardware"],"metadata":{"id":"_bE41iRvGOGn"}},{"cell_type":"code","source":["input_path_hardware = \"/content/drive/MyDrive/DATA 6250/Datasets/Original/ml_hardware.csv\"\n","df = pd.read_csv(input_path_hardware)\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cXvGjYGoGOYb","executionInfo":{"status":"ok","timestamp":1744229383225,"user_tz":240,"elapsed":7,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"ff1dd6e0-3b06-48ce-8054-e4c1b8b25229"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(160, 31)"]},"metadata":{},"execution_count":114}]},{"cell_type":"code","source":["for col in df.columns:\n","  print(col)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ih6RLXKfHX1v","executionInfo":{"status":"ok","timestamp":1744229385243,"user_tz":240,"elapsed":7,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"9a1c54bd-5287-49ff-a2e8-149c69f09a6e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hardware name\n","Manufacturer\n","Type\n","Release date\n","Release price (USD)\n","FP64 (double precision) performance (FLOP/s)\n","FP32 (single precision) performance (FLOP/s)\n","FP16 (half precision) performance (FLOP/s)\n","TF32 (TensorFloat-32) performance (FLOP/s)\n","Tensor-FP16/BF16 performance (FLOP/s)\n","INT16 performance (OP/s)\n","INT8 performance (OP/s)\n","INT4 performance (OP/s)\n","Memory size per board (Byte)\n","Memory bandwidth (byte/s)\n","Intranode bandwidth (byte/s)\n","Internode bandwidth (bit/s)\n","Die Size (mm^2)\n","TDP (W)\n","Base clock (MHz)\n","Boost clock (MHz)\n","Memory clock (MHz)\n","Memory bus (bit)\n","Tensor cores\n","Process size (nm)\n","Foundry\n","Number of transistors (millions)\n","Link to datasheet\n","Source for the price\n","ML models\n","Last modified\n"]}]},{"cell_type":"markdown","source":["### Rename and place columns in proper order and delete the redundant columns."],"metadata":{"id":"BjIzOD0X0Xes"}},{"cell_type":"code","source":["rename_cols = {\"Hardware name\": \"hardware model\",\n","               \"FP64 (double precision) performance (FLOP/s)\":\"FP64 (flops/s)\",\n","               \"FP32 (single precision) performance (FLOP/s)\":\"FP32 (flops/s)\",\n","               \"FP16 (half precision) performance (FLOP/s)\":\"FP16 (flops/s)\",\n","               \"TF32 (TensorFloat-32) performance (FLOP/s)\": \"TF32 (flops/s)\",\n","               \"Tensor-FP16/BF16 performance (FLOP/s)\": \"Tensor-FP16 (flops/s)\",\n","               \"INT16 performance (OP/s)\":\"INT16 (ops/s)\",\n","               \"INT8 performance (OP/s)\":\"INT8 (ops/s)\",\n","               \"INT4 performance (OP/s)\":\"INT4 (ops/s)\",\n","               \"Memory size per board (Byte)\":\"Memory size (bytes)\",\n","               \"Number of transistors (millions)\":\"transistors (10^6)\"}\n","df.rename(columns=rename_cols,inplace=True)\n","order = [\"hardware model\",\"Manufacturer\",\"Type\",\"Release date\",\"TDP (W)\",\"ML models\"]\n","left_over = [col for col in df.columns if col not in order]\n","df = df.reindex(columns=order+left_over)\n","remove_cols = [\"Last modified\"]\n","for col in remove_cols:\n","  df.drop(columns=col,inplace=True)\n","for col in df.columns:\n","  print(col)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3dU1NC0iHq4M","executionInfo":{"status":"ok","timestamp":1744229387256,"user_tz":240,"elapsed":6,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"061aea7b-8f7b-420f-e685-c60d385376ea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["hardware model\n","Manufacturer\n","Type\n","Release date\n","TDP (W)\n","ML models\n","Release price (USD)\n","FP64 (flops/s)\n","FP32 (flops/s)\n","FP16 (flops/s)\n","TF32 (flops/s)\n","Tensor-FP16 (flops/s)\n","INT16 (ops/s)\n","INT8 (ops/s)\n","INT4 (ops/s)\n","Memory size (bytes)\n","Memory bandwidth (byte/s)\n","Intranode bandwidth (byte/s)\n","Internode bandwidth (bit/s)\n","Die Size (mm^2)\n","Base clock (MHz)\n","Boost clock (MHz)\n","Memory clock (MHz)\n","Memory bus (bit)\n","Tensor cores\n","Process size (nm)\n","Foundry\n","transistors (10^6)\n","Link to datasheet\n","Source for the price\n"]}]},{"cell_type":"markdown","source":["### Find all columns that needs to be normalized"],"metadata":{"id":"F-R6Q8af0aTE"}},{"cell_type":"code","source":["columns_to_explode = [\n","    col for col in df.select_dtypes(include=['object']).columns\n","    if df[col].dropna().astype(str).str.contains(',').any()\n","]\n","for col in columns_to_explode:\n","    print(col)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XhnekkjoJ-30","executionInfo":{"status":"ok","timestamp":1744229390123,"user_tz":240,"elapsed":3,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"d8747331-859a-4f9b-b3e2-03d1e7cbfea9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ML models\n","Link to datasheet\n","Source for the price\n"]}]},{"cell_type":"markdown","source":["### Select only those columns that needs to be normailzed\n","### Normalize the selected columns"],"metadata":{"id":"nVJ5I4-M0dLP"}},{"cell_type":"code","source":["columns_to_explode = [\"ML models\"]\n","for col in columns_to_explode:\n","    df[col] = df[col].apply(lambda x: [s.strip() for s in str(x).split(',')] if pd.notnull(x) else x)\n","for col in columns_to_explode:\n","    df = df.explode(col)\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y1JJgUQ3KBOm","executionInfo":{"status":"ok","timestamp":1744229395431,"user_tz":240,"elapsed":42,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"1b955337-bd21-4b20-d584-4bb605b07bae"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(879, 30)"]},"metadata":{},"execution_count":118}]},{"cell_type":"markdown","source":["### Normalize the selected columns"],"metadata":{"id":"_41kJdyK0klZ"}},{"cell_type":"code","source":["df = df.drop_duplicates()\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yOxNRIBeKZSj","executionInfo":{"status":"ok","timestamp":1744229402745,"user_tz":240,"elapsed":6,"user":{"displayName":"Rohan Pratap Reddy Ravula","userId":"17224012780318323221"}},"outputId":"f8228a4a-40c3-4cfe-d03e-fab996d5fe23"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(879, 30)"]},"metadata":{},"execution_count":119}]},{"cell_type":"markdown","source":["### Save the file in the new directory"],"metadata":{"id":"mFGO6iBF0tGC"}},{"cell_type":"code","source":["output_path_large_models = \"/content/drive/MyDrive/DATA 6250/Datasets/Updated/Normalized/ml_hardware_normalized.csv\"\n","if os.path.exists(output_path_large_models):\n","    os.remove(output_path_large_models)\n","path = os.path.dirname(output_path_large_models)\n","if not os.path.exists(path):\n","    os.makedirs(path)\n","df.to_csv(output_path_large_models, index=False)"],"metadata":{"id":"N6d_8YtbLNrC"},"execution_count":null,"outputs":[]}]}